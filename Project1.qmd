---
title: "Project 1 - Pranav and Kyra - ST558"
author: "Pranav Nair, Kyra Kapsaskis"
format: html
editor: visual
---

## Data Processing

### First steps

For the first part of our project, we are looking at some survey data about school enrollment.

First, we need to load our necessary packages

```{r}
library(tidyr)
library(dplyr)
library(tidyverse)
library(readr)
```

For our first data file, we will only be looking at some of the columns. Initially, we want to read the data in and call it, to make sure we've done this successfully.


```{r}
EDU01a <- read_csv("https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv")
EDU01a
```

The data looks good! So now we will select only the columns that we'd like to look at. Using the `select()` function, we can name our data frame, the columns that we want, and we can even use `starts_with` and `ends_with` to help us choose exactly what we want with a little more specificity and ease. We are creating a new object in the process so that we can do further manipulations on just these columns. We're calling the new object `EDU01a_select`.

## Pranav, I think we need to change "Area_name" to "area_name" per the instructions in the project doc.Not sure how important this is or why it was listed.

```{r}
#1 - Select following columns
EDU01a_select <- select(EDU01a,"Area_name", starts_with("STC"), ends_with("D"))
EDU01a_select
```

We know that in this data, the column that ends with a D indicates an enrollment value for that year (with the year being the two digits before the 'D'). Going down, we see all of the enrollment values from that year, in all of the different cities. In order to make this data easier for us to read and understand, we can convert it to long format and rename the columns. What this will do, is turn the columns with this awkward long name ending with D, to simply read '`Enrollment`'. Then all of the years will be listed going down and the corresponding values will appear alongside them. This also means that there will be more than one row/observation for each city. Instead of looking all the way across the row for each city and scanning for the correct year column, we will now have individual rows/observations for city, a year, and the corresponding enrollment value. This will make things easier to process.

In order to do this conversion, we are going to simply use the `pivot_longer()` function, and its built-in arguments to achieve our goal. `Names_to` helps us give a new name to the new column **containing** the **NAMES OF THE COLUMNS** we have specified. This makes sense when you think about it because these used to be names of the columns and now they need a new name, as they have been rotated and will be located where the data is. `Values_to` helps us set a new name for the data **values** that will remain values but will just be slightly shifted to correspond to the brand new `Enrollment` column we've made.


```{r}
# using the help documentation is such a convenient way to remember what the arguments are asking for
help(pivot_longer)
```

Let's give it a whirl! And we are also creating a new object at the same time called `EDU01a_long`.


```{r}
#2 - Convert to long data
EDU01a_long <-
  pivot_longer(EDU01a_select, cols = 3:12,
               names_to = "Enrollment",
               values_to = "values")

```

Scrolling through, the data looks how we want it to for now.

The next step is to make further sense of this long Enrollment string. Two digits of the year are in there so we want to pull that out and make it look better by adding the other digits of the year.

The enrollment variable contains strings that are 10 digits long. 

```{r}
#Pranav, I'm going to comment this out and mess with it a little bit, because I'm finding this a bit confusing but want to preserve what we had originally...

#3
#EDU01a_long |>
  #separate_wider_position(Enrollment, c(7, Year = 2, 1)) |>
  #mutate(EDU01a_long, Measurement = Area_name, substr(Enrollment, 1, 7))
```

FOR REFERENCE: Instructions for number 3.

Parse the string to pull out the year and convert the year into a numeric value such as 1997 or 2002. Grab the first three characters and following four digits to create a new variable representing which measurement was grabbed. â€“ Hint: Check out the substr() function from base R

```{r}
#3 Corrected version

EDU01a_new <- EDU01a_long |>
      mutate(
       IncompleteYear = as.numeric(substr(Enrollment, 8, 9)),
       Measurement = substr(Enrollment, 1, 7), 
       Year = IncompleteYear + 1900) |>
      select(-Enrollment, -IncompleteYear)


EDU01a_new

```

```{r}
# commenting this out because I have some updated code for this above

#3
#EDU01a_long |>
  #separate_wider_position(Enrollment, c(7, Year = 2, 1)) |>
  #mutate(EDU01a_long, Measurement = Area_name, substr(Enrollment, 1, 7))


#4

countystuff <- grep(pattern = ", \\w\\w", EDU01a_long$Area_name)

EDU01a_county <- EDU01a_long[countystuff, ]

EDU01a_state <- EDU01a_long[-countystuff, ]


class(EDU01a_county) <- c("county", class(EDU01a_county))

EDU01a_county_class <- EDU01a_county |>
  mutate(class_type = class(EDU01a_county)[1])

class(EDU01a_state) <- c("state", class(EDU01a_state))

EDU01a_state_class <- EDU01a_state |>
  mutate(class_type = class(EDU01a_state)[1])


#5
print(EDU01a_county_class)
print(EDU01a_state_class)

EDU01a_county_class_abb <- EDU01a_county_class |>
  mutate(abbrev_state = substr(area_name, nchar(area_name)-1, nchar(area_name)))

print(EDU01a_county_class_abb)

#6

state_division <- c("CONNECTICUT" = "New England", 
                    "MAINE" = "New England",
                    "MASSACHUSETTS" = "New England",
                    "NEW HAMPSHIRE" = "New England",
                    "RHODE ISLAND" = "New England",
                    "VERMONT" = "New England",
                    "NEW JERSEY" = "Middle Atlantic",
                    "NEW YORK" = "Middle Atlantic",
                    "PENNSYLVANIA" = "Middle Atlantic",
                    "ILLINOIS" = "East North Central",
                    "INDIANA" = "East North Central",
                    "MICHIGAN" = "East North Central",
                    "OHIO" = "East North Central",
                    "WISCONSIN" = "East North Central",
                    "IOWA" = "West North Central",
                    "KANSAS" = "West North Central",
                    "MINNESOTA" = "West North Central",
                    "MISSOURI" = "West North Central",
                    "NEBRASKA" = "West North Central",
                    "NORTH DAKOTA" = "West North Central",
                    "SOUTH DAKOTA" = "West North Central",
                    "DELAWARE" = "South Atlantic",
                    "FLORIDA" = "South Atlantic",
                    "GEORGIA" = "South Atlantic",
                    "MARYLAND" = "South Atlantic",
                    "NORTH CAROLINA" = "South Atlantic",
                    "SOUTH CAROLINA" = "South Atlantic",
                    "VIRGINIA" = "South Atlantic",
                    "District of Columbia" = "South Atlantic",
                    "DISTRICT OF COLUMBIA" = "South Atlantic",
                    "WEST VIRGINIA" = "South Atlantic",
                    "ALABAMA" = "East South Central",
                    "KENTUCKY" = "East South Central",
                    "MISSISSIPPI" = "East South Central",
                    "TENNESSEE" = "East South Central",
                    "ARKANSAS" = "West South Central",
                    "LOUISIANA" = "West South Central",
                    "OKLAHOMA" = "West South Central",
                    "TEXAS" = "West South Central",
                    "ARIZONA" = "Mountain",
                    "COLORADO" = "Mountain",
                    "IDAHO" = "Mountain",
                    "MONTANA" = "Mountain",
                    "NEVADA" = "Mountain",
                    "NEW MEXICO" = "Mountain",
                    "UTAH" = "Mountain",
                    "WYOMING" = "Mountain",
                    "ALASKA" = "Pacific",
                    "CALIFORNIA" = "Pacific",
                    "HAWAII" = "Pacific",
                    "OREGON" = "Pacific",
                    "WASHINGTON" = "Pacific")


EDU01a_state_class_division <- EDU01a_state_class |>
  mutate(division = ifelse(area_name %in% names(state_division),
                           state_division[area_name],
                           "Error"))  

print(EDU01a_state_class_division)


#Following steps for second dataset

#function for steps 1 and 2


  step_1_2 <- function(data, value_col_name = "enrollment") {
    data |>
      select(Area_name, starts_with("STC"), ends_with("D")) |>
      rename(area_name = Area_name) |>
      pivot_longer(cols = ends_with("D"), names_to = "measurement_year", values_to = value_col_name)
     
  }
  
  step_3 <- function(data) {
    data |>
      mutate(
        year = as.numeric(substr(measurement_year, nchar(measurement_year) - 3, nchar(measurement_year) - 2)), 
        measurement = substr(measurement_year, 1, nchar(measurement_year) - 4)
      )
  }
  
  step_5 <- function(data) {
    data |>
      mutate(state = ifelse(grepl(", \\w\\w", area_name), substr(area_name, nchar(area_name) - 1, nchar(area_name)), NA))
  }
  
  step_6 <- function(data, state_division) {
    data |> 
      mutate(division = ifelse(area_name %in% names(state_division),
                        state_division[area_name],
                        "Error"))  

  }
  
  create_two_datasets <- function(data) {
    county_filter <- grep(pattern = ", \\w\\w", data$area_name)
    county_data <- data[county_filter, ]
    non_county_data <- data[-county_filter, ]
    
    class(county_data) <- c("county", class(county_data))
    class(non_county_data) <- c("state", class(non_county_data))
    
    list(county_data = county_data, non_county_data = non_county_data)
  }
  process_data <- function(data, state_division) {
    long_data <- step_1_2(data)
    
    parsed_data <- step_3(long_data)
    
    datasets <- create_two_datasets(parsed_data)
    county_data <- datasets$county_data
    non_county_data <- datasets$non_county_data
    
    county_data <- step_5(county_data)
    
    non_county_data <- step_6(non_county_data, state_division)
    
    list(county_data = county_data, non_county_data = non_county_data)
  }

my_wrapper <- function(url, value_col_name = "enrollment") {
  data <- read_csv(url)
  state_division <- c("CONNECTICUT" = "New England", 
                      "MAINE" = "New England",
                      "MASSACHUSETTS" = "New England",
                      "NEW HAMPSHIRE" = "New England",
                      "RHODE ISLAND" = "New England",
                      "VERMONT" = "New England",
                      "NEW JERSEY" = "Middle Atlantic",
                      "NEW YORK" = "Middle Atlantic",
                      "PENNSYLVANIA" = "Middle Atlantic",
                      "ILLINOIS" = "East North Central",
                      "INDIANA" = "East North Central",
                      "MICHIGAN" = "East North Central",
                      "OHIO" = "East North Central",
                      "WISCONSIN" = "East North Central",
                      "IOWA" = "West North Central",
                      "KANSAS" = "West North Central",
                      "MINNESOTA" = "West North Central",
                      "MISSOURI" = "West North Central",
                      "NEBRASKA" = "West North Central",
                      "NORTH DAKOTA" = "West North Central",
                      "SOUTH DAKOTA" = "West North Central",
                      "DELAWARE" = "South Atlantic",
                      "FLORIDA" = "South Atlantic",
                      "GEORGIA" = "South Atlantic",
                      "MARYLAND" = "South Atlantic",
                      "NORTH CAROLINA" = "South Atlantic",
                      "SOUTH CAROLINA" = "South Atlantic",
                      "VIRGINIA" = "South Atlantic",
                      "District of Columbia" = "South Atlantic",
                      "DISTRICT OF COLUMBIA" = "South Atlantic",
                      "WEST VIRGINIA" = "South Atlantic",
                      "ALABAMA" = "East South Central",
                      "KENTUCKY" = "East South Central",
                      "MISSISSIPPI" = "East South Central",
                      "TENNESSEE" = "East South Central",
                      "ARKANSAS" = "West South Central",
                      "LOUISIANA" = "West South Central",
                      "OKLAHOMA" = "West South Central",
                      "TEXAS" = "West South Central",
                      "ARIZONA" = "Mountain",
                      "COLORADO" = "Mountain",
                      "IDAHO" = "Mountain",
                      "MONTANA" = "Mountain",
                      "NEVADA" = "Mountain",
                      "NEW MEXICO" = "Mountain",
                      "UTAH" = "Mountain",
                      "WYOMING" = "Mountain",
                      "ALASKA" = "Pacific",
                      "CALIFORNIA" = "Pacific",
                      "HAWAII" = "Pacific",
                      "OREGON" = "Pacific",
                      "WASHINGTON" = "Pacific")
  
  result <- process_data(data, state_division)
  
  result
}

url <- "https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv"

result <- my_wrapper(url)

print(result)

county_data <- result$county_data
non_county_data <- result$non_county_data

print(county_data)
print(non_county_data)


```
